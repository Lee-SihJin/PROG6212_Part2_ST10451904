// <auto-generated />
using System;
using ContractMonthlyClaimSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContractMonthlyClaimSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251017122859_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.AcademicManager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ManagerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("AcademicManagers");

                    b.HasData(
                        new
                        {
                            ManagerId = 1,
                            Email = "michael.brown@university.ac.za",
                            FirstName = "Dr. Michael",
                            IsActive = true,
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.ClaimItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("HourlyRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HoursWorked")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemId");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimItems");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerId"));

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("HourlyRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("LecturerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.MonthlyClaim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<string>("ClaimMonth")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("CoordinatorComments")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CoordinatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CoordinatorReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerComments")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ManagerReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalHours")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ClaimId");

                    b.HasIndex("CoordinatorId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("LecturerId", "ClaimMonth")
                        .IsUnique();

                    b.ToTable("MonthlyClaims");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.ProgrammeCoordinator", b =>
                {
                    b.Property<int>("CoordinatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoordinatorId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CoordinatorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("ProgrammeCoordinators");

                    b.HasData(
                        new
                        {
                            CoordinatorId = 1,
                            Department = "Computer Science",
                            Email = "john.smith@university.ac.za",
                            FirstName = "John",
                            IsActive = true,
                            LastName = "Smith"
                        },
                        new
                        {
                            CoordinatorId = 2,
                            Department = "Information Technology",
                            Email = "sarah.johnson@university.ac.za",
                            FirstName = "Sarah",
                            IsActive = true,
                            LastName = "Johnson"
                        });
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.SupportingDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentId");

                    b.HasIndex("ClaimId");

                    b.ToTable("SupportingDocuments");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.ClaimItem", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.MonthlyClaim", "MonthlyClaim")
                        .WithMany("ClaimItems")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthlyClaim");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.MonthlyClaim", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.ProgrammeCoordinator", "Coordinator")
                        .WithMany("ApprovedClaims")
                        .HasForeignKey("CoordinatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ContractMonthlyClaimSystem.Models.Lecturer", "Lecturer")
                        .WithMany("MonthlyClaims")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ContractMonthlyClaimSystem.Models.AcademicManager", "Manager")
                        .WithMany("FinalApprovedClaims")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Coordinator");

                    b.Navigation("Lecturer");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.SupportingDocument", b =>
                {
                    b.HasOne("ContractMonthlyClaimSystem.Models.MonthlyClaim", "MonthlyClaim")
                        .WithMany("SupportingDocuments")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthlyClaim");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.AcademicManager", b =>
                {
                    b.Navigation("FinalApprovedClaims");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.Lecturer", b =>
                {
                    b.Navigation("MonthlyClaims");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.MonthlyClaim", b =>
                {
                    b.Navigation("ClaimItems");

                    b.Navigation("SupportingDocuments");
                });

            modelBuilder.Entity("ContractMonthlyClaimSystem.Models.ProgrammeCoordinator", b =>
                {
                    b.Navigation("ApprovedClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
