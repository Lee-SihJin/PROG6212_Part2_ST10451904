@model IEnumerable<MonthlyClaim>
@{
    ViewData["Title"] = "Processed Claims";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <h2 class="card-title">
                                <i class="fas fa-history me-2"></i>All Processed Claims
                            </h2>
                            <p class="card-text mb-0">
                                Complete history of finally approved and rejected claims
                            </p>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="bg-light text-dark p-3 rounded">
                                <h5 class="mb-1">Total Processed</h5>
                                <h4 class="text-primary mb-0">@Model.Count()</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-3">
                            <label for="statusFilter" class="form-label">Status</label>
                            <select class="form-select" id="statusFilter" name="status">
                                <option value="">All Statuses</option>
                                <option value="ManagerApproved">Approved</option>
                                <option value="Rejected">Rejected</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="monthFilter" class="form-label">Claim Month</label>
                            <input type="month" class="form-control" id="monthFilter" name="month">
                        </div>
                        <div class="col-md-3">
                            <label for="lecturerFilter" class="form-label">Lecturer</label>
                            <input type="text" class="form-control" id="lecturerFilter" name="lecturer" placeholder="Search lecturer...">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-filter me-2"></i>Apply Filters
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Processed Claims Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-list-alt me-2"></i>Processed Claims History
                        <span class="badge bg-light text-dark ms-2">@Model.Count()</span>
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="processedClaimsTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Claim ID</th>
                                        <th>Lecturer</th>
                                        <th>Claim Month</th>
                                        <th>Hours</th>
                                        <th>Amount</th>
                                        <th>Coordinator</th>
                                        <th>Final Decision</th>
                                        <th>Decision Date</th>
                                        <th>Manager Notes</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var claim in Model)
                                    {
                                        <tr>
                                            <td>
                                                <strong>#@claim.ClaimId</strong>
                                            </td>
                                            <td>
                                                <strong>@claim.Lecturer?.FullName</strong>
                                                <br>
                                                <small class="text-muted">@claim.Lecturer?.EmployeeNumber</small>
                                            </td>
                                            <td>@claim.DisplayMonth</td>
                                            <td>@claim.TotalHours.ToString("N1")</td>
                                            <td class="fw-bold @(claim.Status == ClaimStatus.ManagerApproved ? "text-success" : "text-danger")">
                                                R @claim.TotalAmount.ToString("N2")
                                            </td>
                                            <td>
                                                @if (claim.Coordinator != null)
                                                {
                                                    <span>@claim.Coordinator.FullName</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(claim.Status)">
                                                    @claim.Status
                                                </span>
                                            </td>
                                            <td>
                                                @if (claim.ManagerApprovalDate.HasValue)
                                                {
                                                    <div>
                                                        <strong>@claim.ManagerApprovalDate.Value.ToString("dd MMM yyyy")</strong>
                                                        <br>
                                                        <small class="text-muted">@claim.ManagerApprovalDate.Value.ToString("HH:mm")</small>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(claim.ManagerComments))
                                                {
                                                    <span title="@claim.ManagerComments" data-bs-toggle="tooltip">
                                                        @(claim.ManagerComments.Length > 50 ? claim.ManagerComments.Substring(0, 50) + "..." : claim.ManagerComments)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No notes</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group-vertical btn-group-sm" role="group">
                                                    <a asp-controller="Manager"
                                                       asp-action="ProcessedClaimDetails"
                                                       asp-route-id="@claim.ClaimId"
                                                       class="btn btn-outline-primary mb-1">
                                                        <i class="fas fa-eye me-1"></i>View Details
                                                    </a>
                                                    @if (claim.SupportingDocuments?.Any() == true)
                                                    {
                                                        <a asp-controller="Manager"
                                                           asp-action="DownloadAllDocuments"
                                                           asp-route-claimId="@claim.ClaimId"
                                                           class="btn btn-outline-success">
                                                            <i class="fas fa-download me-1"></i>Documents
                                                        </a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Summary Statistics -->
                        <div class="row mt-4">
                            <div class="col-md-3">
                                <div class="card bg-success text-white">
                                    <div class="card-body text-center">
                                        <h4>@Model.Count(m => m.Status == ClaimStatus.ManagerApproved)</h4>
                                        <p class="mb-0">Approved Claims</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-danger text-white">
                                    <div class="card-body text-center">
                                        <h4>@Model.Count(m => m.Status == ClaimStatus.Rejected)</h4>
                                        <p class="mb-0">Rejected Claims</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-primary text-white">
                                    <div class="card-body text-center">
                                        <h4>R @Model.Where(m => m.Status == ClaimStatus.ManagerApproved).Sum(m => m.TotalAmount).ToString("N0")</h4>
                                        <p class="mb-0">Total Approved Amount</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-info text-white">
                                    <div class="card-body text-center">
                                        <h4>@Model.Select(m => m.LecturerId).Distinct().Count()</h4>
                                        <p class="mb-0">Unique Lecturers</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
                            <h4 class="text-muted">No Processed Claims Found</h4>
                            <p class="text-muted">There are no finally approved or rejected claims in the system yet.</p>
                            <a asp-controller="Manager" asp-action="Index" class="btn btn-primary">
                                <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Simple client-side filtering (optional enhancement)
        document.addEventListener('DOMContentLoaded', function() {
            const statusFilter = document.getElementById('statusFilter');
            const monthFilter = document.getElementById('monthFilter');
            const lecturerFilter = document.getElementById('lecturerFilter');

            if (statusFilter) {
                // Set current filter values from URL parameters
                const urlParams = new URLSearchParams(window.location.search);
                statusFilter.value = urlParams.get('status') || '';
                monthFilter.value = urlParams.get('month') || '';
                lecturerFilter.value = urlParams.get('lecturer') || '';
            }
        });
    </script>
}

@functions {
    string GetStatusBadgeClass(ClaimStatus status)
    {
        return status switch
        {
            ClaimStatus.ManagerApproved => "bg-success",
            ClaimStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }
}