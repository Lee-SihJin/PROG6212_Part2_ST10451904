@model ContractMonthlyClaimSystem.Models.MonthlyClaim
@{
    ViewData["Title"] = "Claim Details";
    if(Model.Coordinator != null)
    {
        string processorName = (Model.ManagerId == null) ? @Model.Coordinator.FullName : @Model.Manager.FullName;
    }
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h2 class="card-title mb-1">
                                <i class="fas fa-file-invoice me-2"></i>Claim Details
                            </h2>
                            <p class="card-text mb-0">
                                Claim for @Model.DisplayMonth | Submitted: @Model.SubmissionDate.ToString("dd MMMM yyyy")
                            </p>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="bg-light text-dark p-3 rounded">
                                <h5 class="mb-1">Status</h5>
                                <span class="badge @GetStatusBadgeClass(Model.Status) fs-6">
                                    @Model.Status
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Claim Information -->
        <div class="col-lg-8">
            <!-- Basic Claim Details -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>Claim Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <th width="40%">Claim Month:</th>
                                    <td>@Model.DisplayMonth</td>
                                </tr>
                                <tr>
                                    <th>Submission Date:</th>
                                    <td>@Model.SubmissionDate.ToString("dd MMMM yyyy")</td>
                                </tr>
                                <tr>
                                    <th>Lecturer:</th>
                                    <td>@Model.Lecturer?.FullName</td>
                                </tr>
                                <tr>
                                    <th>Employee Number:</th>
                                    <td>@Model.Lecturer?.EmployeeNumber</td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <th width="40%">Total Hours:</th>
                                    <td>@Model.TotalHours.ToString("N1") hours</td>
                                </tr>
                                <tr>
                                    <th>Hourly Rate:</th>
                                    <td>R @Model.Lecturer?.HourlyRate.ToString("N2")</td>
                                </tr>
                                <tr>
                                    <th>Total Amount:</th>
                                    <td class="fw-bold text-success">R @Model.TotalAmount.ToString("N2")</td>
                                </tr>
                                <tr>
                                    <th>Status:</th>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(Model.Status)">
                                            @Model.Status
                                        </span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Supporting Documents -->
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-file me-2"></i>Supporting Documents
                        <span class="badge bg-primary ms-2">@Model.SupportingDocuments.Count</span>
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.SupportingDocuments.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Document Name</th>
                                        <th>Type</th>
                                        <th>Size</th>
                                        <th>Upload Date</th>
                                        <th>Description</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var document in Model.SupportingDocuments)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="fas fa-file @GetFileIconClass(document.OriginalFileName) text-primary me-2"></i>
                                                    <div>
                                                        <div class="fw-bold">@document.OriginalFileName</div>
                                                        <small class="text-muted">@document.FileName</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@document.DocumentType</span>
                                            </td>
                                            <td>@document.FileSizeDisplay</td>
                                            <td>@document.UploadDate.ToString("dd MMM yyyy")</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(document.Description))
                                                {
                                                    <span title="@document.Description" data-bs-toggle="tooltip">
                                                        @(document.Description.Length > 30 ? document.Description.Substring(0, 30) + "..." : document.Description)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No description</span>
                                                }
                                            </td>
                                            <td>
                                                <a asp-controller="Lecturer"
                                                   asp-action="DownloadDocument"
                                                   asp-route-documentId="@document.DocumentId"
                                                   class="btn btn-sm btn-outline-primary"
                                                   title="Download Document">
                                                    <i class="fas fa-download"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-file-excel fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No Supporting Documents</h5>
                            <p class="text-muted">No documents were attached to this claim.</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Sidebar - Status & Actions -->
        <div class="col-lg-4">
            <!-- Status Timeline -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-history me-2"></i>Claim Status
                    </h5>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <div class="timeline-item @(Model.Status >= ClaimStatus.Draft ? "active" : "")">
                            <div class="timeline-marker bg-success"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Draft Created</h6>
                                <p class="text-muted small mb-0">@Model.SubmissionDate.ToString("dd MMM yyyy HH:mm")</p>
                            </div>
                        </div>

                        @if (Model.Status >= ClaimStatus.Submitted)
                        {
                            <div class="timeline-item active">
                                <div class="timeline-marker bg-primary"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Submitted</h6>
                                    <p class="text-muted small mb-0">Awaiting coordinator approval</p>
                                </div>
                            </div>
                        }

                        @if (Model.CoordinatorId != null)
                        {
                            @if (String.Equals(Model.Status.ToString(), "Rejected") && Model.ManagerId == null)
                            {
                                <div class="timeline-item active">
                                    <div class="timeline-marker bg-info"></div>
                                    <div class="timeline-content">
                                        <h6 class="mb-1">Rejected By Coordinator @Model.Coordinator.FullName</h6>
                                        <p class="text-muted small mb-0">@(Model.CoordinatorApprovalDate?.ToString("dd MMM yyyy HH:mm") ?? "Pending")</p>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="timeline-item active">
                                    <div class="timeline-marker bg-info"></div>
                                    <div class="timeline-content">
                                        <h6 class="mb-1">Approved By Coordinator @Model.Coordinator.FullName</h6>
                                        <p class="text-muted small mb-0">@(Model.CoordinatorApprovalDate?.ToString("dd MMM yyyy HH:mm") ?? "Pending")</p>
                                    </div>
                                </div>
                            }
                        }

                        @if (Model.ManagerId != null)
                        {
                            @if (String.Equals(Model.Status.ToString(), "Rejected"))
                            {
                                <div class="timeline-item active">
                                    <div class="timeline-marker bg-info"></div>
                                    <div class="timeline-content">
                                        <h6 class="mb-1">Rejected By Manager @Model.Manager.FullName</h6>
                                        <p class="text-muted small mb-0">@(Model.ManagerApprovalDate?.ToString("dd MMM yyyy HH:mm") ?? "Pending")</p>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="timeline-item active">
                                    <div class="timeline-marker bg-info"></div>
                                    <div class="timeline-content">
                                        <h6 class="mb-1">Approved By Manager @Model.Manager.FullName</h6>
                                        <p class="text-muted small mb-0">@(Model.ManagerApprovalDate?.ToString("dd MMM yyyy HH:mm") ?? "Pending")</p>
                                    </div>
                                </div>
                            }
                        }

                        @if (Model.Status >= ClaimStatus.Paid)
                        {
                            <div class="timeline-item active">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Paid</h6>
                                    <p class="text-muted small mb-0">@(Model.PaymentDate?.ToString("dd MMM yyyy HH:mm") ?? "Pending")</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-bolt me-2"></i>Quick Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a asp-controller="Lecturer" asp-action="Index" class="btn btn-outline-primary">
                            <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
                        </a>

                        @if (Model.SupportingDocuments.Any())
                        {
                            <a href="#" class="btn btn-outline-success" onclick="downloadAllDocuments(@Model.ClaimId)">
                                <i class="fas fa-download me-2"></i>Download All Documents
                            </a>
                        }

                        @if (Model.Status == ClaimStatus.Draft)
                        {
                            <a href="#" class="btn btn-outline-warning" onclick="editClaim(@Model.ClaimId)">
                                <i class="fas fa-edit me-2"></i>Edit Claim
                            </a>
                        }

                        <button type="button" class="btn btn-outline-info" onclick="printClaim()">
                            <i class="fas fa-print me-2"></i>Print Claim
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function downloadAllDocuments(claimId) {
            window.location.href = '/Lecturer/DownloadAllDocuments?claimId=' + claimId;
        }

        function editClaim(claimId) {
            if (confirm('Are you sure you want to edit this draft claim?')) {
                window.location.href = '/Lecturer/EditDraft/' + claimId;
            }
        }

        function printClaim() {
            window.print();
        }

        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>

    <style>
        .timeline {
            position: relative;
            padding-left: 30px;
        }

        .timeline-item {
            position: relative;
            margin-bottom: 20px;
        }

        .timeline-marker {
            position: absolute;
            left: -30px;
            top: 5px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: 3px solid #fff;
            z-index: 2;
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: -24px;
            top: 20px;
            bottom: -20px;
            width: 2px;
            background-color: #e9ecef;
        }

        .timeline-item:last-child::before {
            display: none;
        }

        .timeline-item.active .timeline-marker {
            box-shadow: 0 0 0 3px rgba(var(--bs-primary-rgb), 0.2);
        }

        .timeline-content h6 {
            margin-bottom: 5px;
        }
    </style>
}

@functions {
    string GetStatusBadgeClass(ClaimStatus status)
    {
        return status switch
        {
            ClaimStatus.Draft => "bg-secondary",
            ClaimStatus.Submitted => "bg-warning",
            ClaimStatus.CoordinatorApproved => "bg-info",
            ClaimStatus.ManagerApproved => "bg-success",
            ClaimStatus.Paid => "bg-success",
            ClaimStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetFileIconClass(string fileName)
    {
        if (string.IsNullOrEmpty(fileName))
            return "fa-file";

        var ext = fileName.Contains('.') ? fileName.Substring(fileName.LastIndexOf('.')).ToLower() : "";

        switch (ext)
        {
            case ".pdf":
                return "fa-file-pdf";
            case ".doc":
            case ".docx":
                return "fa-file-word";
            case ".xls":
            case ".xlsx":
                return "fa-file-excel";
            case ".jpg":
            case ".jpeg":
            case ".png":
            case ".gif":
                return "fa-file-image";
            case ".zip":
            case ".rar":
                return "fa-file-archive";
            default:
                return "fa-file";
        }
    }
}